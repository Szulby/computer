// load stos, local and arg into ram
@256
d=a 
@sp
m=d
@300
d=a
@lcl
m=d
@400
d=a
@arg
m=d

// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1

// push constant 2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1

// function caller mult
@mult.ret
d=a
@sp
a=m
m=d
@sp
m=m+1
@mult
0;jmp
(mult.ret)

// function caller inifinite
@inifinite.ret
d=a
@sp
a=m
m=d
@sp
m=m+1
@inifinite
0;jmp
(inifinite.ret)

// function crete inifinite
(inifinite)


// function caller inifinite
@inifinite.ret
d=a
@sp
a=m
m=d
@sp
m=m+1
@inifinite
0;jmp
(inifinite.ret)

// function return
@sp
am=m-1
a=m
d=a
a=d+1
0;jmp

// function crete mult
(mult)


// function return
@sp
am=m-1
a=m
d=a
a=d+1
0;jmp

// inifinite loop in the end
(end)
@end
0;jmp